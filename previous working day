<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config" scriptlang="groovy">

<var-def name="ph">
		<datastore name="public_holidays">
			SELECT * from @this
		</datastore>
</var-def>


	
	<robotics-flow>
<robot driver="universal" name="driver" start-in-private="false" close-on-completion="true">
			<capability name ="SEARCH_ALL_WINDOWS" value="true"/>
			<capability name="CLOSE_ALL_WINDOWS" value="false"/>
			
			
		<script><![CDATA[
		
		//date
		import java.time.LocalDate;
		import java.time.LocalDateTime;
		import java.time.ZoneId;
		import java.time.format.DateTimeFormatter
		
		//DATE
		LocalDate karanLocal    = LocalDate.parse("2020-08-31"); 
		
		//LIST OF PUB_HO
		List dateList = new ArrayList();
		for(int i = 0; i < ph.size(); i++){
			date = ph.get(i).getAt("Date").toString();	
			dateList.add(date);
		}
		
		
		println(pwd(karanLocal,dateList));
		
		
		
		
		//PREVIOUS WORKING DAY
		public pwd(LocalDate date, List publicHolidaysList){
			DateTimeFormatter csvDateFormat   = DateTimeFormatter.ofPattern("M/d/yyyy");
			boolean validPwd = false;
			LocalDate pwd = date.minusDays(1);	
			while(!validPwd){
				
				String pwdCheck = pwd.format(csvDateFormat);
					 
				//PREVIOUS WORKING IS A NON-SUNDAY PUBLIC HOLIDAY
				if(publicHolidaysList.contains(pwdCheck) && pwd.getDayOfWeek().toString() != "SUNDAY"){
					pwd = pwd.minusDays(1);

				}
				//THE WEEKND
				else if(pwd.getDayOfWeek().toString() == "SUNDAY"){
					//SUNDAY
					if(pwd.getDayOfWeek().toString() == "SUNDAY"){
						pwd = pwd.minusDays(1);
					}
					
					//SATURDAY
					if(pwd.getDayOfWeek().toString() == "SATURDAY"){
						pwd = pwd.minusDays(1);
					}
				}
				//ALL OTHER SCENARIOS(NORMAL WORKING DAY)
				else{
					validPwd = true;
				}
				
				
			}
			return pwd;
		}
		
		
		]]></script>
	
	</robot>
</robotics-flow>
	
    <export include-original-data="true"></export>

</config>
