<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config" scriptlang="groovy">

<secrets-vault-get alias="morongwa" />

<var-def name="ph">
		<datastore name="public_holidays">
			SELECT * from @this
		</datastore>
</var-def>


<var-def name="links">
	<datastore name="sfi_refund">
		SELECT * FROM @this
	</datastore>
</var-def> 
	
	<robotics-flow>
<robot driver="universal" name="driver" start-in-private="false" close-on-completion="true">
			<capability name ="SEARCH_ALL_WINDOWS" value="true"/>
			<capability name="CLOSE_ALL_WINDOWS" value="false"/>
			
			<capability name="chromeOptions">
				<script return="chromeArgs"><![CDATA[
					
					//DONWLOAD PATH [put path in datastore in this format-->\\muebcyp02fvg02\eProcessing1$\ROBOTICS\SFI Refund\config\Open]
					String download_path = links.get(0).getAt("download_path").toString();
					
					import org.openqa.selenium.chrome.ChromeOptions;
					String dl_path = "";
					ChromeOptions options = new ChromeOptions();
					Map<String,Object> prefs = new HashMap<String,Object>();
					prefs.put("download.default_directory",download_path);
					options.setExperimentalOption("prefs",prefs)
					chromeArgs = options;
				 ]]></script>
			</capability>
			
		<script><![CDATA[
		
		//date
		import java.time.LocalDate;
		import java.time.LocalDateTime;
		import java.time.ZoneId;
		import java.time.format.DateTimeFormatter
		//gAuth
		import com.warrenstrange.googleauth.GoogleAuthenticator;
		

		boolean next_step = true;
		
		//DATE
		//LocalDate karanLocal    = LocalDate.parse("2020-09-03"); 							
		LocalDate karanLocal    = LocalDate.now()		
		LocalDate pwd		    = karanLocal.minusDays(1);										//live
		LocalDate second_pwd	= pwd.minusDays(1);
		LocalDateTime kLDT 		= LocalDateTime.now(ZoneId.of("GMT+04:00"));
		
		DateTimeFormatter morongwaQueryDateFormat   = DateTimeFormatter.ofPattern("d");
		DateTimeFormatter csvDateFormat   = DateTimeFormatter.ofPattern("M/d/yyyy");
		
		//folder and file format
		DateTimeFormatter yearlyFolderFormat = DateTimeFormatter.ofPattern("YYYY");
		DateTimeFormatter monthlyFolderFormat = DateTimeFormatter.ofPattern("MM MMMM");
		DateTimeFormatter dailyFolderDateFormat = DateTimeFormatter.ofPattern("dd.MM.yy");
		String yearlyFolderStr = karanLocal.format(yearlyFolderFormat);
		String monthlyFolderStr = karanLocal.format(monthlyFolderFormat);
		String dailyFolderStr = karanLocal.format(dailyFolderDateFormat);
		DateTimeFormatter dateExcelFormat = DateTimeFormatter.ofPattern("MMMM "+"yyyy");
		String dateExcel  = karanLocal.format(dateExcelFormat);
		
		String tayme = karanLocal.toString() + " " + kLDT.getHour().toString()+ "_" + kLDT.getMinute().toString()
		
		//DIRECTORY
		String Dir = links.get(0).getAt("path").toString();
		//MORONGWA LIVE
		String morongwa_live = links.get(0).getAt("morongwa_live").toString();
		//SECRET
		String secret = links.get(0).getAt("secret").toString();
		
		//SECRETS VAULT
		Map entryMap = secureEntryMap.getWrappedObject();
		com.freedomoss.crowdcontrol.webharvest.web.dto.SecureEntryDTO obj2 = entryMap.get("morongwa");
		morongwa_login = obj2.getKey().toString();
		morongwa_pass = obj2.getValue().toString();
	
		//LIST OF PUB_HO
		List dateList = new ArrayList();
		for(int i = 0; i < ph.size(); i++){
			date = ph.get(i).getAt("Date").toString();	
			dateList.add(date);
		}
		
		//PREVIOUS WORKING DAY
		boolean validPwd = false;
		while(!validPwd){
			
			String pwdCheck = pwd.format(csvDateFormat);
				 
			//PREVIOUS WORKING IS A NON-SUNDAY PUBLIC HOLIDAY
			if(dateList.contains(pwdCheck) && pwd.getDayOfWeek().toString() != "SUNDAY"){
				pwd = pwd.minusDays(1);

			}
			//THE WEEKND
			else if(pwd.getDayOfWeek().toString() == "SUNDAY"){
				//SUNDAY
				if(pwd.getDayOfWeek().toString() == "SUNDAY"){
					pwd = pwd.minusDays(1);
				}
				
				//SATURDAY
				if(pwd.getDayOfWeek().toString() == "SATURDAY"){
					pwd = pwd.minusDays(1);
				}
			}
			//ALL OTHER SCENARIOS(NORMAL WORKING DAY)
			else{
				validPwd = true;
			}
			
			
		}
		log.info("Current Day: "+karanLocal);
		//PWD CHANGES 
		log.info("Previous Working Day: "+pwd);
		
		////////////////////CREATE FOLDER//////////////////////
		//YEARLY FOLDER
		File yearlyFolder = new File(Dir+yearlyFolderStr);
		if(!yearlyFolder.exists()){
		   yearlyFolder.mkdir();
		}
		
		//MONTHLY FOLDER
		File monthlyFolder = new File(Dir+yearlyFolderStr+"//"+monthlyFolderStr);
		if(!monthlyFolder.exists()){
			monthlyFolder.mkdir();
		}
			
		//DAILY FOLDER
		File dailyFolder = new File(Dir+yearlyFolderStr+"//"+monthlyFolderStr+"//"+dailyFolderStr);
		if(!dailyFolder.exists()){
			dailyFolder.mkdir();   
		}
		////////////////////CREATE FOLDER//////////////////////
		
		//path
		String daily_path =  Dir+yearlyFolderStr+"//"+monthlyFolderStr+"//"+dailyFolderStr+"//";
		String monthly_path = Dir+yearlyFolderStr+"//"+monthlyFolderStr+"//";
		String log_path = daily_path+"log.txt";
		
		//PRESENCE CHECK DATE EXCEL
		//date excel path
		String dateExcelPath = monthly_path+dateExcel+".xlsx";
		String dateExcelTemplatePath = Dir+"sfi_refund_excel_template.xlsx";
		File dateExcelTemplateFile = new File(dateExcelTemplatePath);

		File dateExcelFile = new File(dateExcelPath);
		if(!dateExcelFile.exists()){
			log.info("Creating Monthly Excel")
			
			Files.copy(dateExcelTemplateFile.toPath(),dateExcelFile.toPath());
				
		}
		
		
		
		//LOG FILE
		FileWriter fr = new FileWriter(daily_path+"log.txt", true);
		BufferedWriter loginta = new BufferedWriter(fr);
		
		loginta.append("----------------------------------------------------");
		loginta.newLine();
		loginta.append(tayme);
		loginta.newLine();
		loginta.append("Previous Working Day is: ");
		loginta.append(pwd.toString());
		loginta.newLine();
		loginta.newLine();
		loginta.append("--DOWNLOAD SWIFT EXCEL--");
		loginta.newLine();
		//////////////////////////////////////////////////////////DOWNLOAD MORONGWA/////////////////////////////////////////////////////////////////
		//String secret = "KZ4U6RSLIRAWO32MGB2FCOBSGVQUUNBS";
		boolean login_pass = true;

		for (int c = 0; c < 2; c++){
			
			GoogleAuthenticator gAuth = new GoogleAuthenticator();
			int code = gAuth.getTotpPassword(secret);
			
			//LOGIN
			pageLoadTimeout(60000)
			openChrome(morongwa_live);
			$(byXpath('//*[@id="username"]')).sendKeys(morongwa_login);
			$(byXpath('//*[@id="password"]')).sendKeys(morongwa_pass);
			pageLoadTimeout(60000)
			$(byXpath('//*[@id="kc-login"]')).click();
			
			//G_AUTH 
			$(byXpath('//*[@id="otp"]')).sendKeys(code);//$(byXpath('//*[@id="totp"]')).sendKeys(code);
			pageLoadTimeout(50000)
			$(byXpath('//*[@id="kc-login"]')).click();
			
			boolean invalid_auth = false;
			try{
				invalid_auth = $(byXpath('//*[@id="kc-content-wrapper"]/div/span[2]')).is(EXISTS);
			}catch(Exception e){}
			if(invalid_auth){
				String warning = $(byXpath('//*[@id="kc-content-wrapper"]/div/span[2]')).text();
				if(warning.contains("Invalid authenticator code")){
					log.info("Invalid authenticator code. Logging in again");
					
				}
			}
				
			try{
				login_pass = $(byXpath('//*[@id="morongwa-aro"]')).is(EXIST);
			}catch(Exception e){
				login_pass = false;
			}
			if(login_pass){
				log.info("Login Successful");
				break;
			}
				
		}

		if(!login_pass){
			log.info("Login to Morongwa failed twice. Stopping process");
			loginta.append("Login to Morongwa failed twice. Stopping process");
			loginta.newLine();
		}
		
		//test
		//switchToExistingWindow(new WindowDescriptor("", "(?i).*\\QMorongwa\\E.*", false, true).toString(), 1000)
		
		//Morongwa ARO
		pageLoadTimeout(10000);
		$(byXpath('//*[@id="morongwa-aro"]')).click();
		
		//println("Hour of the day "+kLDT.getHour())
		
		//MORNING RUN 
		if(kLDT.getHour() <= 12){
			//SYSTEM DATE--from
			sleep(10000)
			//click on datepicker
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[1]/div/div[4]/div[1]/angular2-date-picker/div/div[1]')).click();
			
			//choose pwd evening time
			//click on time change
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[1]/div/div[4]/div[1]/angular2-date-picker/div/div[2]/div[1]/div[4]/div/span')).click();
			//hour 
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[1]/div/div[4]/div[1]/angular2-date-picker/div/div[2]/div[5]/div[1]/div[1]/input')).text("04");
			//min
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[1]/div/div[4]/div[1]/angular2-date-picker/div/div[2]/div[5]/div[1]/div[3]/input')).text("00");
			//pm
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[1]/div/div[4]/div[1]/angular2-date-picker/div/div[2]/div[5]/div[2]/div/button[2]')).click();
			sendKeys(Keys.PAGE_DOWN);
			sleep(1000);
			//set time
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[1]/div/div[4]/div[1]/angular2-date-picker/div/div[2]/div[5]/div[3]')).click();
			sleep(1000);
			
			//if pwd is friday or public holiday
			String morongwaPwDate = pwd.format(morongwaQueryDateFormat);
			if(pwd != karanLocal.minusDays(1)){
				//change month
				if(pwd.getMonth() != karanLocal.getMonth()){
					$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[1]/div/div[4]/div[1]/angular2-date-picker/div/div[2]/div[2]/i[1]')).click();
				}
				$(byText(morongwaPwDate)).click();
			}
			else{
				//done
				$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[1]/div/div[4]/div[1]/angular2-date-picker/div/div[2]/div[6]/div')).click();
			}
		
			//SYSTEM DATE--to
			//choose system date
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[2]/div/div[2]/select')).click(); 
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[2]/div/div[2]/select/option[20]')).click(); 
			sleep(1000);
			//choose operator(less than)
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[2]/div/div[3]/select')).click();
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[2]/div/div[3]/select/option[3]')).click();
			sleep(1000);
			
			
		}
		
		//EVENING RUN 
		if(kLDT.getHour() > 12){
			String morongwaKaranDate = karanLocal.format(morongwaQueryDateFormat);
			//SYSTEM DATE--from
			sleep(10000)
			//click on datepicker
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[1]/div/div[4]/div[1]/angular2-date-picker/div/div[1]')).click();
			
			//choose current morning time
			//click on time change
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[1]/div/div[4]/div[1]/angular2-date-picker/div/div[2]/div[1]/div[4]/div/span')).click();
			//hour 
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[1]/div/div[4]/div[1]/angular2-date-picker/div/div[2]/div[5]/div[1]/div[1]/input')).text("10");
			//min
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[1]/div/div[4]/div[1]/angular2-date-picker/div/div[2]/div[5]/div[1]/div[3]/input')).text("30");
			//am
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[1]/div/div[4]/div[1]/angular2-date-picker/div/div[2]/div[5]/div[2]/div/button[1]')).click();
			sendKeys(Keys.PAGE_DOWN);
			sleep(1000);
			//set time
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[1]/div/div[4]/div[1]/angular2-date-picker/div/div[2]/div[5]/div[3]')).click();
			sleep(1000);
		
			//choose date
			$(byText(morongwaKaranDate)).click();
			//done
			//$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[1]/div/div[4]/div[1]/angular2-date-picker/div/div[2]/div[6]/div')).click();
		
		
			//SYSTEM DATE--to
			//choose system date
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[2]/div/div[2]/select')).click(); 
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[2]/div/div[2]/select/option[20]')).click(); 
			sleep(1000);
			//choose operator(less than)
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[2]/div/div[3]/select')).click();
			$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[2]/div/div[3]/select/option[3]')).click();
			sleep(1000);
			
			
		}
			
			
		//ADD QUERY
		$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/div[2]/label')).click();
		
		//DIRECTION
		$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[3]/div/div[2]/select')).click();
		$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[3]/div/div[2]/select/option[8]')).click();
		$(byXpath('//*[@id="direction"]')).click();
		$(byXpath('//*[@id="direction"]/option[2]')).click();
		
		//ADD QUERY
		$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/div[2]/label')).click();
		
		//MESSAGE TYPE
		$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[4]/div/div[2]/select')).click();
		$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[4]/div/div[2]/select/option[10]')).click();
		$(byXpath('//*[@id="messageType"]')).text("MT202");
		
		//ADD QUERY
		$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/div[2]/label')).click();
		
		//CURRENCY CODE
		$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[5]/div/div[2]/select')).click();
		$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[5]/div/div[2]/select/option[6]')).click();
		$(byXpath('//*[@id="paymentDetails_currencyCode"]')).text('MUR');
		
		//test
		sleep(20000)
		
		//SEARCH
		sleep(2000);
		//$(byXpath('//*[@id="queryTab-panel"]/form/div/div/div/label/')).click();
		$(byText('Search')).click();
		
		
		//DOWNLOAD EXCEL
		boolean download = $(byXpath('/html/body/app-root/div/div/div/ng-component/div[1]/ng-component/div/div[2]/div/div/div[1]/div/mor-data-export/div/button')).is(ENABLED);
		boolean warning_present = false;
		while(!download){
			//wait for file to download
			try{
				warning_present = $(byXpath('//*[@id="toast-container"]/div/div[2]/span')).isExists();
			}catch(Exception e){}
			if(warning_present){
				String warning = $(byXpath('//*[@id="toast-container"]/div/div[2]/span')).text();
				if(warning.contains("No messages match your search")){
					log.info("No Morongwa messages found!");
					loginta.append("No Morongwa messages found!");
					loginta.newLine();
					next_step = false;
					break;
				}
			}
			download = $(byXpath('/html/body/app-root/div/div/div/ng-component/div[1]/ng-component/div/div[2]/div/div/div[1]/div/mor-data-export/div/button')).is(ENABLED);
			//no message found toast
			
			sleep(2500);
			
		}

		if(download){ 
			$(byXpath('/html/body/app-root/div/div/div/ng-component/div[1]/ng-component/div/div[2]/div/div/div[1]/div/mor-data-export/div/button')).click();
			$(byXpath('/html/body/app-root/div/div/div/ng-component/div[1]/ng-component/div/div[2]/div/div/div[1]/div/mor-data-export/div/div/button[1]')).click();
			sleep(5000);
			log.info("Morongwa Query Downloaded");
			loginta.append("Morongwa Query Downloaded");
			loginta.newLine();
		}
		
		loginta.append("----------------------------------------------------");
		loginta.newLine();
		loginta.newLine();
		loginta.close();

		sys.defineVariable("next_step",next_step);
		
	]]></script>
	
	</robot>
</robotics-flow>
	
    <export include-original-data="true">
	 <single-column name="next_step" value="${next_step}"/>
</export>

</config>		